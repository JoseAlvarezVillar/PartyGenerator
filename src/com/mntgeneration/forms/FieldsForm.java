/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mntgeneration.forms;

import com.mntgeneration.utils.EmployeeTemplateFiller;
import com.mntgeneration.utils.FieldListFiller;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextField;

/**
 *
 * @author jose.alvarez.villar
 */
public class FieldsForm extends javax.swing.JFrame {
    private static final Font FONT = new java.awt.Font("Tahoma", 1, 16);
    private static final String TEXTFIELD = "TextField";
    private static final String EMPTY_STRING = "";
    private List<String> fields = null;
    GridBagLayout layout = null;
    JButton generateButton = null;
    JButton stepBack = null;
    ShowFieldsLists showFieldsLists = null;
    Map<String, JTextField> textFieldMap = new HashMap<>();
    GridBagConstraints constraints = null;
    private int idx_x = 0;
    private int idx_y = 0;
    JPanel panel = new JPanel();
    Boolean isEmployee = Boolean.FALSE;

    /**
     * Creates new form FieldsForm
     */
    public FieldsForm() {
        initComponents();
    }

    public FieldsForm(List<String> fields, ShowFieldsLists showFieldsLists) {
        initComponents();
        this.fields = fields;
        this.showFieldsLists = showFieldsLists;
        fillForm();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Party Generator");
        setPreferredSize(new java.awt.Dimension(1024, 600));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 807, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 513, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fillForm() {
        layout = new GridBagLayout();
        panel.setLayout(layout);
        JScrollPane scrollPane = new JScrollPane(panel);
        scrollPane.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
        scrollPane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
//        scrollPane.setBounds(50, 30, 300, 20);
        constraints = new GridBagConstraints();

        if (fields != null && !fields.isEmpty()) {
            fields.stream().forEach(x -> createNewField(x));
        }

        stepBack = new JButton("<- Back");
        stepBack.addActionListener((java.awt.event.ActionEvent evt) -> {
            stepBack(evt);
        });
        constraints.gridx = 0;
        constraints.gridy = idx_y + 4;
        layout.setConstraints(stepBack, constraints);

        generateButton = new JButton("Generate MNT");
        generateButton.addActionListener((java.awt.event.ActionEvent evt) -> {
            saveMap();
        });
        constraints.gridx = 1;
        constraints.gridy = idx_y + 4;
        layout.setConstraints(generateButton, constraints);
        panel.add(stepBack);
        panel.add(generateButton);
        this.setContentPane(scrollPane);
        pack();
    }

    public void createNewField(String x) {
        if (idx_x > 3) {
            idx_x = 0;
            idx_y++;
        }
        createLabel(x);
        createTextField(x);
    }

    private void createTextField(String x) {
        JTextField textField = new javax.swing.JTextField();
        StringBuilder builder = new StringBuilder(x.toLowerCase());
        builder.append(TEXTFIELD);
        textField.setName(builder.toString());
        textField.setPreferredSize(new Dimension(190, 30));
        constraints.gridx = idx_x++;
        constraints.gridy = idx_y;
        constraints.insets = new Insets(10, 10, 10, 10);
        layout.setConstraints(textField, constraints);
        panel.add(textField);

        textFieldMap.put(textField.getName(), textField);
    }
 
    private void createLabel(String x) {
        JLabel label = new javax.swing.JLabel();
        label.setFont(FONT);
        constraints.gridx = idx_x++;
        constraints.gridy = idx_y;
        constraints.insets = new Insets(10, 10, 10, 10);
        layout.setConstraints(label, constraints);
        label.setText(x);
        panel.add(label);
        
        if ("EMPLOYEE_ID".equals(x)) {
            System.out.println("Employee has been added to the list");
        }
    }
    
    private void saveMap() {
        Map<String, Object> data = new HashMap();

        Collections.list(FieldListFiller.getFields().elements()).stream()
                .map(x -> x.toLowerCase().concat("TextField"))
                .forEach((String x) -> {
                    if (textFieldMap.containsKey(x)) {
                        data.put(x, textFieldMap.get(x).getText());
                    } else {
                        data.put(x, EMPTY_STRING);
                    }
                });

        EmployeeTemplateFiller.generateFile(data);
    }

    private void stepBack(ActionEvent evt) {
        showFieldsLists.setVisible(true);
        this.setVisible(false);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
